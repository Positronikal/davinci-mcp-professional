[project]
name = "davinci-mcp-professional"
version = "2.2.1"
description = "Model Context Protocol server for DaVinci Resolve integration"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Hoyt Harness", email = "hoyt.harness@gmail.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
dependencies = [
    "mcp>=1.0.0",
    "anyio>=4.0.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "colorama>=0.4.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
]
security = [
    "safety>=2.3.0",
    "bandit>=1.7.5",
    "pip-licenses>=4.3.0",
    "semgrep>=1.45.0",
]

[project.scripts]
davinci-mcp = "davinci_mcp.cli:main"

[project.urls]
Homepage = "https://github.com/Positronikal/davinci-mcp-professional"
Repository = "https://github.com/Positronikal/davinci-mcp-professional"
Issues = "https://github.com/Positronikal/davinci-mcp-professional/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/davinci_mcp"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "safety>=2.3.0",
    "bandit>=1.7.5",
    "pip-licenses>=4.3.0",
]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pyright]
pythonVersion = "3.9"
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = true
reportUnusedVariable = true
reportDuplicateImport = true
reportUntypedFunctionDecorator = false
reportUntypedClassDecorator = false
reportUntypedBaseClass = false
reportUntypedNamedTuple = false
reportPrivateUsage = false
reportConstantRedefinition = true
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = true
reportInconsistentConstructor = true
exclude = [
    "**/__pycache__",
    "**/node_modules",
    ".venv",
    "lib",
    "build",
    "dist",
    "tests"
]
include = [
    "src"
]

[tool.ruff]
line-length = 88
target-version = "py39"
